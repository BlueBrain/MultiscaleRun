include:
  - project: hpc/gitlab-pipelines
    file:
      - spack-build-components.gitlab-ci.yml
      - bbp-gitlab-access.yml

default:
  tags: [bb5_map]

variables:
  STEPS_BRANCH:
    value: master
  PY_NEURODAMUS_BRANCH:
    value: main
  NEURODAMUS_NEOCORTEX_BRANCH:
    value: main

spack_setup:
  extends: [.spack_setup_ccache]
  before_script:
    - SPACK_BRANCH=develop

.build:
  extends: [.spack_build]
  variables:
    bb5_ntasks: 2   # so we block 16 cores
    bb5_cpus_per_task: 8 # ninja -j {this}
    bb5_memory: 76G # ~16*384/80

setup_steps:
  extends: [.build]
  variables:
    SPACK_PACKAGE: steps
    SPACK_PACKAGE_SPEC: +distmesh+petsc

setup_neurodamus_neocortex:
  extends: [.build]
  variables:
    SPACK_PACKAGE: neurodamus-neocortex
    SPACK_PACKAGE_SPEC: +ngv+metabolism

setup_py_neurodamus:
  extends: [.build]
  variables:
    SPACK_PACKAGE: py-neurodamus

.custom_build:
  stage: build
  variables:
    bb5_ntasks: 2   # so we block 16 cores
    bb5_cpus_per_task: 8 # ninja -j {this}
    bb5_memory: 76G # ~16*384/80
  artifacts:
    when: always
    paths:
      - "${envfile}.env"
    reports:
      dotenv:
        - "${envfile}.env"
  script:
    - !reference [ .bbp_gitlab_access, script ]
    - source .ci/setup.sh

setup_bloodflow:
  extends: [.custom_build]
  variables:
    setup_file: .setup_bloodflow.sh
    envvars: "envvars=(BLOODFLOW_PATH)"
    envfile: bloodflow_envs

setup_spackenv:
  extends: [.custom_build]
  needs:
    - setup_steps
    - setup_neurodamus_neocortex
    - setup_py_neurodamus
  variables:
    setup_file: .setup_spackenv.sh
    envvars: "envvars=(SPACKENV_PATH)"
    envfile: spack_envs

setup_python_venv:
  extends: [.custom_build]
  needs:
    - spack_setup
    - setup_bloodflow
  variables:
    setup_file: .setup_python_venv.sh
    envvars: "envvars=(PYTHON_VENV_PATH)"
    envfile: python_venv_envs

setup_julia:
  extends: [.custom_build]
  needs:
    - spack_setup
    - setup_python_venv
  variables:
    setup_file: .setup_julia.sh
    envvars: "envvars=(JULIA_DEPOT_PATH JULIA_PROJECT)"
    envfile: julia_envs

.test:
  stage: test
  needs:
    - setup_spackenv
    - setup_julia
    - setup_python_venv
    - setup_neurodamus_neocortex
    - setup_py_neurodamus
    - setup_steps
    - setup_bloodflow
  variables:
    bb5_exclusive: "full"
    bb5_constraint: cpu
    bb5_memory: 0
    bb5_cpus_per_task: 2
    OMP_NUM_THREADS: 1

pytests:
  extends: [.test]
  script:
    - source .ci/load.sh
    - pytest pytests

.nrun_test:
  extends: [.test]
  timeout: 2 hours

  artifacts:
    when: always
    paths:
      - RESULTS/*
    expire_in: 3 days
  variables:
    blueconfig_path: BlueConfig
    mesh_path: steps_meshes/mc2c/mc2c.msh
  script:
    - source .ci/load.sh
    - .ci/test.sh

dualrun_test:
  extends: [.nrun_test]
  timeout: 2 hours
  variables:
    bb5_duration: "01:00:00"
    bb5_ntasks: 16
    with_steps: 1
    with_metabolism: 0
    with_bloodflow: 0

triplerun_test:
  extends: [.nrun_test]
  timeout: 2 hours
  variables:
    bb5_duration: "02:00:00"
    bb5_ntasks: 32
    with_steps: 1
    with_metabolism: 1
    with_bloodflow: 0

quadrun_test:
  extends: [.nrun_test]
  timeout: 2 hours
  variables:
    bb5_duration: "02:00:00"
    bb5_ntasks: 32
    with_steps: 1
    with_metabolism: 1
    with_bloodflow: 1